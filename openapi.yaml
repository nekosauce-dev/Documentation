openapi: "3.0.3"
info:
  title: NekoSauce API
  description: An anime and manga sauce finding API
  version: "0.0.1"
servers:
  - url: https://nekosauce.com/api
    description: NekoSauce's API server
paths:
  /search:
    get:
      security:
        - ApiKey: []
      requestBody:
        required: false
        description: A raw image file. The size must not exceed 1MB. Any format supported by [Pillow](https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html) is supported.
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: The query was completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchResult"
        400:
          description: The provided image is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "#/components/schemas/InvalidImageError"
        403:
          description: The credentials are not provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialsNotProvidedError"
        500:
          description: An internal error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "#/components/schemas/InternalServerError"
    parameters:
      - in: query
        name: url
        description: An URL pointing to the image's source file
        schema:
          type: string
        required: false
      - in: query
        name: limit
        description: The maximum number of results to return
        schema:
          type: integer
          format: int32
          default: 10
          minimum: 1
          maximum: 50
        required: false
      - in: query
        name: threshold
        description: The lowest similarity (percentage) that can be returned. The lower this value, the more the time the request will take to complete.
        schema:
          type: number
          format: float
          minimum: 1
          maximum: 100
          default: 90
        required: false
      - in: query
        name: sources
        description: The ID of the sources from where results can be
        schema:
          type: array
          items:
            type: integer
            format: int32
        required: false
      - in: query
        name: nsfw
        description: Filter the results by their NSFW status. Don't specify to return all results.
        schema:
          type: boolean
          nullable: true
          default: null
        required: false
      - in: header
        name: Content-Disposition
        description: "The name of the image file together with some other metadata. Format: `attachment; filename={filename}`"
        schema:
          type: string
        required: false
      - in: header
        name: Content-Type
        description: "The type of the image file (if uploaded)"
        schema:
          type: string
        required: false
  /sources:
    get:
      responses:
        200:
          description: The query was completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Source"
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: Authorization
      description: "Format: `ApiKey <api-key>`"
  schemas:
    SearchResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the search result
        similarity:
          type: number
          format: float
          description: The similarity (percentage) of the source with the queried image
        hash:
          type: string
          description: The image's wavelet hash
        sha512:
          type: string
          description: The image's SHA-512 hash, used for thumbnails. To generate a thumbnail URL, use `https://cdn.nekosauce.org/images/thumbnails/{sha512}.webp`
        urls:
          type: object
          properties:
            site:
              type: array
              description: A list of URLs of the sauce (human-accessible)
              items:
                type: string
                format: uri
            file:
              type: array
              description: A list of URLs that return the sauce's source file
              items:
                type: string
                format: uri
            api:
              type: array
              description: A list of URLs that will return the information for the sauce in computer-readable format (e.g. JSON)
              items:
                type: string
                format: uri
        source:
          type: integer
          format: int32
          description: The ID from the source from where the sauce was fetched
        source_site_id:
          type: string
          description: The ID of the sauce in the source from where it was fetched
        tags:
          type: array
          description: "A list of automatically-generated tags that represent different metadata from the sauce.\n\nâ €\n\nThese tags follow this format: `{source}:{resource}:{property}:{value}`."
          items:
            type: string
        sauce_type:
          type: string
          enum:
            - illustration
            - animated_illustration
            - manga
            - doujinshi
            - anime
            - visual_novel
            - light_novel
            - other
          description: The sauce's type. In other words, the sauce's format.
        is_nsfw:
          type: boolean
          nullable: true
          description: Whether the sauce is NSFW or not.
        file_meta:
          type: object
          description: An object containing metadata about the sauce's file
          properties:
            width:
              type: integer
              format: int32
              description: The sauce's image width
            height:
              type: integer
              format: int32
              description: The sauce's image height
            mimetype:
              type: string
              enum:
                - image/webp
              description: The image thumbnail's mimetype
        created_at:
          type: string
          format: date-time
          description: The date and time in which the sauce was added to NekoSauce's database
    Source:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The source's ID
        module:
          type: string
          description: The internal import module. Not useful for API clients but it's there for internal use.
        name:
          type: string
          description: The human-readable name of the source.
        urls:
          type: object
          description: The source's URLs
          properties:
            website:
              type: string
              format: uri
              description: The source's official website URL
            documentation:
              type: string
              format: uri
              description: The source's official API documentation URL
              nullable: true
        enabled:
          type: boolean
          description: Whether the source is enabled or not. If `false`, the source won't be updated with new sauces.
        components:
          type: object
          description: The internal components, located at `module`. They're generally useless for API clients.
          properties:
            fetcher:
              type: string
              description: The class name of the source's fetcher. Instances of this class are the ones that fetch new sauces and add them to the database. If it's `null`, this source doesn't fetch sauces.
              nullable: true
            downloader:
              type: string
              description: The class name of the source's downloader. Instances of this class are the ones that download the images from the source. If it's `null`, this source doesn't download images.
              nullable: true
            tagger:
              type: string
              description: The class name of the source's tagger. Instances of this class are the ones that convert sauce URLs into tags like `danbooru:post:id:1`.
              nullable: true
        sauce_types:
          type: array
          description: The sauce types this source can have.
          items:
            type: number
            format: int32
        update_frequency:
          type: string
          description: The frequency with which new sauces are fetched from the source.
    InvalidImageError:
      type: object
      description: The provided image is invalid.
      properties:
        code:
          type: integer
          format: int32
          description: The error code
          example: 400
        message:
          type: string
          description: The error message
          example: This doesn't seem to be an image! U sure u've checked correctly? Nya!
        status:
          type: string
          description: The status of the error
          example: invalid_image
    DownloadError:
      type: object
      description: An error occurred while downloading an image.
      properties:
        code:
          type: integer
          format: int32
          description: The error code
          example: 400
        message:
          type: string
          description: The error message
          example: Oops! Something went wrong while downloading the file.
        status:
          type: string
          description: The status of the error
          example: download_error
    InternalServerError:
      type: object
      description: An internal server error occurred.
      properties:
        code:
          type: integer
          format: int32
          description: The error code
          example: 500
        message:
          type: string
          description: The error message
          example: Looks like the sauce searching catgirl broke something :/ Try again later, nyan!
        status:
          type: string
          description: The status of the error
          example: internal_server_error
    CredentialsNotProvidedError:
      type: object
      description: The credentials are not provided.
      properties:
        code:
          type: integer
          format: int32
          description: The error code
          example: 403
        message:
          type: string
          description: The error message
          example: Authentication credentials were not provided.
        status:
          type: string
          description: The status of the error
          example: not_authenticated